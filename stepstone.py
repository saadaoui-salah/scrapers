import urllib.request
import json




url = "https://www.stepstone.de/public-api/resultlist/unifiedResultlist"
headers = {
    "accept": "application/json",
    "accept-language": "fr-FR,fr;q=0.9,ar-DZ;q=0.8,ar;q=0.7,en-US;q=0.6,en;q=0.5",
    "baggage": ",sentry-environment=live,sentry-public_key=424b55db9013ece7d06f58e756bfc2f3,sentry-trace_id=113bf64cd7c14139b08b9d49777a9275,sentry-sampled=true,sentry-sample_rand=0.12563384170411163,sentry-sample_rate=1",
    "cache-control": "no-cache",
    "content-type": "application/json",
    "cookie": "VISITOR_ID=1cc6d68920320c2e1a7c1fa5118b84a9; anonymousUserId=15228879-69ba-6fb2-d85a-a46def59a6c3; cfid=6663c3b3-32aa-4f41-ace6-82c1b0968197; cftoken=0; USER_HASH_ID=8796fdc9-de61-40cf-ab43-8078bac9c488; V5=1; ...",
    "dnt": "1",
    "origin": "https://www.stepstone.de",
    "pragma": "no-cache",
    "priority": "u=1, i",
    "referer": "https://www.stepstone.de/",
    "sec-ch-ua": '"Google Chrome";v="129", "Not=A?Brand";v="8", "Chromium";v="129"',
    "sec-ch-ua-mobile": "?0",
    "sec-ch-ua-platform": '"Linux"',
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "sec-fetch-site": "same-origin",
    "sentry-trace": "113bf64cd7c14139b08b9d49777a9275-afb9d1e26a765f46-1",
    "user-agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36"
}
import urllib.request
import urllib.parse
import json
import time
from http.cookiejar import CookieJar
from lxml import html


ed = [0, 1, 2, 12, 18, 92, 97, 105, 106, 111, 172, 183, 195, 196, 213, 216, 223, 277, 297, 316, 322, 333, 343, 366, 388, 390, 413, 417, 433, 453, 454, 456, 457, 458, 459, 461, 462, 464, 473, 498, 503, 529, 530, 532, 542, 543, 561, 566, 589, 590, 602, 611, 632, 645, 657, 659, 662, 666, 685, 700, 701, 707, 721, 726, 727, 743, 747, 781, 786, 804, 821, 825, 839, 840, 857, 861, 883, 894, 895, 910, 917, 925, 972, 994, 997, 1000, 1023, 1032, 1034, 1078, 1087, 1091, 1099, 1101, 1103, 1120, 1123, 1146, 1206, 1232, 1246, 1248, 1249, 1250, 1251, 1254, 1263, 1265, 1309, 1342, 1353, 1354, 1356, 1357, 1373, 1382, 1416, 1443, 1449, 1456, 1457, 1467, 1469, 1471, 1475, 1552, 1561, 1565, 1566, 1568, 1573, 1582, 1607, 1655, 1667, 1668, 1669, 1670, 1780, 1783, 1784, 1831, 1857, 1861, 1863, 1878, 1879, 1887, 1889, 1898, 1907, 1909, 1930, 1940, 1948, 1952, 1953, 1956, 1964, 1965, 1971, 2015, 2047, 2053, 2056, 2058, 2067, 2074, 2110, 2146, 2150, 2153, 2157, 2159, 2161, 2164, 2165, 2181, 2191, 2235, 2238, 2246, 2251, 2253, 2257, 2261, 2269, 2289, 2323, 2328, 2331, 2338, 2346, 2348, 2349, 2358, 2362, 2447, 2454, 2457, 2460, 2468, 2474, 2478, 2483, 2486, 2508, 2565, 2567, 2568, 2585, 2589, 2594, 2598, 2601, 2604, 2622, 2640, 2643, 2669, 2676, 2679, 2695, 2703, 2708, 2711, 2719, 2736, 2793, 2800, 2806, 2815, 2816, 2824, 2832, 2858, 2882, 2921, 2925, 2930, 2936, 2942, 2945, 2973, 2998, 3025, 3031, 3033, 3037, 3040, 3042, 3051, 3062, 3091, 3116, 3151, 3160, 3161, 3165, 3167, 3170, 3172, 3174, 3176, 3178, 3184, 3212, 3238, 3246, 3255, 3256, 3264, 3267, 3271, 3298, 3306, 3313, 3320, 3330, 3342, 3347, 3353, 3355, 3357, 3376, 3385, 3404, 3427, 3433, 3440, 3444, 3463, 3467, 3478, 3485, 3492, 3500, 3501, 3507, 3514, 3519, 3532, 3534, 3554, 3556, 3558, 3573, 3596, 3626, 3646, 3671, 3680, 3685, 3691, 3696, 3701, 3705, 3706, 3707, 3711, 3729, 3741, 3751, 3762, 3772, 3773, 3774, 3849, 3852, 3859, 3887, 3899, 3902, 3918, 3952, 3958, 3995, 3996, 4003, 4013, 4043, 4102, 4108, 4119, 4121, 4141, 4142, 4144, 4152, 4178, 4181, 4204, 4209, 4226, 4230, 4251, 4273, 4279, 4296, 4303, 4320, 4347, 4367, 4375, 4409, 4411, 4420, 4447, 4464, 4492, 4519, 4521, 4522, 4523, 4532, 4556, 4584, 4596, 4599, 4614, 4615, 4624, 4637, 4641, 4676, 4686, 4701, 4702, 4709, 4720, 4798, 4824, 4854, 4857, 4858, 4873, 4874, 4934, 4956, 4959, 4979, 4982, 4983, 4996, 4998, 5062, 5093, 5114, 5115, 5118, 5136, 5140, 5186, 5214, 5231, 5232, 5233, 5236, 5237, 5240, 5303, 5313, 5315, 5316, 5367, 5386, 5390, 5397, 5405, 5406, 5408, 5468, 5489, 5493, 5498, 5503, 5504, 5506, 5560, 5580, 5586, 5591, 5592, 5601, 5629, 5654, 5677, 5681, 5685, 5693, 5698, 5701, 5702, 5716, 5742, 5744, 5751, 5765, 5768, 5776, 5782, 5787, 5804, 5816, 5825, 5833, 5852, 5853, 5855, 5871, 5879, 5883, 5886, 5979, 5990, 5994, 6004, 6007, 6009, 6011, 6101, 6110, 6134, 6143, 6149, 6158, 6159, 6201, 6213, 6219, 6243, 6253, 6260, 6304, 6332, 6338, 6340, 6344, 6373, 6380, 6381, 6384, 6418, 6456, 6462, 6463, 6464, 6480, 6486, 6497, 6540, 6585, 6628, 6647, 6661, 6675, 6707, 6708, 6762, 6769, 6788, 6829, 6834, 6873, 6888, 6890, 6957, 6964, 6998, 7003, 7039, 7077, 7079, 7086, 7087, 7092, 7103, 7106, 7108, 7109, 7118, 7132, 7136, 7138, 7156, 7178, 7223, 7241, 7262, 7268, 7269, 7273, 7278, 7291, 7332, 7362, 7374, 7388, 7409, 7423, 7446, 7448, 7468, 7480, 7483, 7489, 7514, 7551, 7554, 7556, 7566, 7567, 7571, 7573, 7580, 7588, 7591, 7626, 7629, 7645, 7661, 7665, 7666, 7673, 7684, 7685, 7687, 7690, 7701, 7728, 7743, 7773, 7782, 7788, 7793, 7799, 7816, 7823, 7824, 7826, 7858, 7862, 7867, 7870, 7878, 7889, 7894, 7905, 7915, 7922, 7945]
ed = [1103, 1120, 1123, 1146, 1206, 1232, 1246, 1248, 1249, 1250, 1251, 1254, 1263, 1265, 1309, 1342, 1353, 1354, 1356, 1357, 1373, 1382, 1416, 1443, 1449, 1456, 1457, 1467, 1469, 1471, 1475, 1552, 1561, 1565, 1566, 1568, 1573, 1582, 1607, 1655, 1667, 1668, 1669, 1670, 1780, 1783, 1784, 1831, 1857, 1861, 1863, 1878, 1879, 1887, 1889, 1898, 1907, 1909, 1930, 1940, 1948, 1952, 1953, 1956, 1964, 1965, 1971, 2015, 2047, 2053, 2056, 2058, 2067, 2074, 2110, 2146, 2150, 2153, 2157, 2159, 2161, 2164, 2165, 2181, 2191, 2235, 2238, 2246, 2251, 2253, 2257, 2261, 2269, 2289, 2323, 2328, 2331, 2338, 2346, 2348, 2349, 2358, 2362, 2447, 2454, 2457, 2460, 2468, 2474, 2478, 2483, 2486, 2508, 2565, 2567, 2568, 2585, 2589, 2594, 2598, 2601, 2604, 2622, 2640, 2643, 2669, 2676, 2679, 2695, 2703, 2708, 2711, 2719, 2736, 2793, 2800, 2806, 2815, 2816, 2824, 2832, 2858, 2882, 2921, 2925, 2930, 2936, 2942, 2945, 2973, 2998, 3025, 3031, 3033, 3037, 3040, 3042, 3051, 3062, 3091, 3116, 3151, 3160, 3161, 3165, 3167, 3170, 3172, 3174, 3176, 3178, 3184, 3212, 3238, 3246, 3255, 3256, 3264, 3267, 3271, 3298, 3306, 3313, 3320, 3330, 3342, 3347, 3353, 3355, 3357, 3376, 3385, 3404, 3427, 3433, 3440, 3444, 3463, 3467, 3478, 3485, 3492, 3500, 3501, 3507, 3514, 3519, 3532, 3534, 3554, 3556, 3558, 3573, 3596, 3626, 3646, 3671, 3680, 3685, 3691, 3696, 3701, 3705, 3706, 3707, 3711, 3729, 3741, 3751, 3762, 3772, 3773, 3774, 3849, 3852, 3859, 3887, 3899, 3902, 3918, 3952, 3958, 3995, 3996, 4003, 4013, 4043, 4102, 4108, 4119, 4121, 4141, 4142, 4144, 4152, 4178, 4181, 4204, 4209, 4226, 4230, 4251, 4273, 4279, 4296, 4303, 4320, 4347, 4367, 4375, 4409, 4411, 4420, 4447, 4464, 4492, 4519, 4521, 4522, 4523, 4532, 4556, 4584, 4596, 4599, 4614, 4615, 4624, 4637, 4641, 4676, 4686, 4701, 4702, 4709, 4720, 4798, 4824, 4854, 4857, 4858, 4873, 4874, 4934, 4956, 4959, 4979, 4982, 4983, 4996, 4998, 5062, 5093, 5114, 5115, 5118, 5136, 5140, 5186, 5214, 5231, 5232, 5233, 5236, 5237, 5240, 5303, 5313, 5315, 5316, 5367, 5386, 5390, 5397, 5405, 5406, 5408, 5468, 5489, 5493, 5498, 5503, 5504, 5506, 5560, 5580, 5586, 5591, 5592, 5601, 5629, 5654, 5677, 5681, 5685, 5693, 5698, 5701, 5702, 5716, 5742, 5744, 5751, 5765, 5768, 5776, 5782, 5787, 5804, 5816, 5825, 5833, 5852, 5853, 5855, 5871, 5879, 5883, 5886, 5979, 5990, 5994, 6004, 6007, 6009, 6011, 6101, 6110, 6134, 6143, 6149, 6158, 6159, 6201, 6213, 6219, 6243, 6253, 6260, 6304, 6332, 6338, 6340, 6344, 6373, 6380, 6381, 6384, 6418, 6456, 6462, 6463, 6464, 6480, 6486, 6497, 6540, 6585, 6628, 6647, 6661, 6675, 6707, 6708, 6762, 6769, 6788, 6829, 6834, 6873, 6888, 6890, 6957, 6964, 6998, 7003, 7039, 7077, 7079, 7086, 7087, 7092, 7103, 7106, 7108, 7109, 7118, 7132, 7136, 7138, 7156, 7178, 7223, 7241, 7262, 7268, 7269, 7273, 7278, 7291, 7332, 7362, 7374, 7388, 7409, 7423, 7446, 7448, 7468, 7480, 7483, 7489, 7514, 7551, 7554, 7556, 7566, 7567, 7571, 7573, 7580, 7588, 7591, 7626, 7629, 7645, 7661, 7665, 7666, 7673, 7684, 7685, 7687, 7690, 7701, 7728, 7743, 7773, 7782, 7788, 7793, 7799, 7816, 7823, 7824, 7826, 7858, 7862, 7867, 7870, 7878, 7889, 7894, 7905, 7915, 7922, 7945]
print(len(ed))
# Global result array
res = []
class S:
    error = []

els = S()

def sleep(seconds):
    time.sleep(seconds)



def extract_script_using_xpath(url):
    print(f"Fetching url {url}...")
    req = urllib.request.Request(url, headers=headers)
    with urllib.request.urlopen(req) as response:
        html_content = response.read().decode("utf-8")
        tree = html.fromstring(html_content)
        # XPath for the script inside div#job-ad-content
        script_elements = tree.xpath('//div[@id="job-ad-content"]/script[1]')
        return script_elements[0].text if script_elements else None

def fetch_stepstone_pages():
    endpoint = "https://www.stepstone.de/public-api/resultlist/unifiedResultlist"

    for page in ed:
        print(f"Fetching page {page}...")
        full_url = f"https://www.stepstone.de/jobs?searchOrigin=Resultlist_top-search?page={page}"
        body = {
            "url": f"https://www.stepstone.de/jobs?page={page}&searchOrigin=Resultlist_top-search",
            "lang": "de",
            "siteId": 250,
            "userData": {
                "isUserLoggedIn": False,
                "candidateId": None,
                "userHashId": "655e3e7c-5996-4fbd-992b-90cf489664bd",
            },
            "isNonEUUser": False,
            "isBotCrawler": False,
            "metadata": {
                "referer": "https://www.stepstone.de/",
                "userAgent": headers["user-agent"],
            },
            "uiLanguage": "de",
            "fields": ["items", "pagination", "unifiedPagination"],
        }

        try:
            req = urllib.request.Request(
                endpoint,
                data=json.dumps(body).encode("utf-8"),
                headers=headers,
                method="POST",
            )
            with urllib.request.urlopen(req) as response:
                result_data = json.loads(response.read().decode("utf-8"))
                items = result_data.get("items", [])

                for item in items:
                    job_url = f"https://www.stepstone.de{item.get('url')}"
                    try:
                        script = extract_script_using_xpath(job_url)
                        item["script"] = script
                        res.append(item)
                    except:
                        print(job_url)
                # Save after every page
                save_json(res, f"_{page}_results.json")
                res.clear()

        except Exception as e:
            print(f"Error fetching page {page}:", e)
            time.sleep(60)
            els.error += [full_url]

def save_json(data, filename):
    with open(filename, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

# Example usage
fetch_stepstone_pages()
import pdb;pdb.set_trace()
print(e.errors)